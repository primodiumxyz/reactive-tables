import { formatAndWriteSolidity } from "@latticexyz/common/codegen";
import { getSrcDirectory } from "@latticexyz/common/foundry";
import { loadConfig } from "@latticexyz/config/node";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
import { StoreConfigWithPrototypes } from "./prototypes/prototypeConfig";

const __dirname = fileURLToPath(import.meta.url);

const librariesFolder = path.resolve(__dirname, "../../src/libraries");

async function libgen() {
  const config = (await loadConfig()) as StoreConfigWithPrototypes;
  const srcDirectory = await getSrcDirectory();
  const fullDir = path.join(srcDirectory, config.codegenDirectory);

  const outputFileName = "Libraries.sol";

  const files = fs.readdirSync(librariesFolder).filter((file) => file.startsWith("Lib"));

  const fileList = files.map((file) => {
    if (file == outputFileName) return "";
    return `import { ${file.slice(0, -4)} } from "../libraries/${file}";`;
  });

  const output = `// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

${fileList.join("\n")}
`;

  await formatAndWriteSolidity(output, path.join(fullDir, "/Libraries.sol"), `Generated libraries`);
}

libgen();
